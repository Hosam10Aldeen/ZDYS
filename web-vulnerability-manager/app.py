## üßê Flask Aray√ºz√ºnden Tarama Ba≈ülatma ve Diƒüer √ñzellikler (app.py)
# app.py
from flask import Flask, render_template, request, redirect, url_for, session, send_file
from scanner_api_client import run_scan
from database_manager import save_scan_result, get_all_results
from report_generator import generate_pdf
from utils import normalize_output, calculate_cvss
from auth import login_required, login_user, logout_user
from mailer import send_report_email
import os

app = Flask(__name__)
app.secret_key = 'super_secret_key'
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        if login_user(username, password):
            return redirect(url_for('index'))
    return render_template('login.html')
@app.route('/logout')
def logout():
    logout_user()
    return redirect(url_for('login'))
@app.route('/', methods=['GET', 'POST'])
@login_required
def index():
    if request.method == 'POST':
        url = request.form['url']
        selected_tools = request.form.getlist('tools')
        email = request.form.get('email')
        results = []
        for tool in selected_tools:
            result = run_scan(tool, url)
            result['output'] = normalize_output(result['output'])
            result['cvss'] = calculate_cvss(result['output'])
            save_scan_result(url, tool, result['output'], result['cvss'])
            results.append(result)
        if email:
            send_report_email(email, results)
        return render_template('report.html', results=results)
    return render_template('index.html')

@app.route('/rapor/pdf')
@login_required
def download_pdf():
    results = get_all_results()
    filepath = generate_pdf(results)
    return send_file(filepath, as_attachment=True)

if __name__ == '__main__':
    app.run(debug=True)
