import requests, gzip, shutil, json, sqlite3, os

# 1. Ä°ndirilecek dosya URL'si
NVD_URL = "https://nvd.nist.gov/feeds/json/cve/2.0/nvdcve-2.0-2025.json.gz"
GZ_FILE = "nvdcve-2.0-2025.json.gz"
JSON_FILE = "nvdcve-2.0-2025.json"

def download_and_extract():
    print("ðŸ”½ Dosya indiriliyor...")
    with requests.get(NVD_URL, stream=True) as r:
        r.raise_for_status()
        with open(GZ_FILE, 'wb') as f:
            shutil.copyfileobj(r.raw, f)
    print("âœ… Ä°ndirildi. Åžimdi aÃ§Ä±lÄ±yor...")
    with gzip.open(GZ_FILE, 'rb') as f_in, open(JSON_FILE, 'wb') as f_out:
        shutil.copyfileobj(f_in, f_out)
    print("âœ… AÃ§Ä±ldÄ±:", JSON_FILE)

def import_to_sqlite():
    print("ðŸ“‚ JSON iÃ§eriÄŸi okunuyor ve veritabanÄ±na aktarÄ±lÄ±yor...")
    with open(JSON_FILE, 'r', encoding='utf-8') as f:
        data = json.load(f)

    conn = sqlite3.connect('cve_data.db')
    c = conn.cursor()
    c.execute('''
        CREATE TABLE IF NOT EXISTS cves (
            id TEXT PRIMARY KEY,
            description TEXT,
            cvss REAL
        )
    ''')

    count = 0
    for item in data.get('CVE_Items', []):
        cve_id = item['cve']['CVE_data_meta']['ID']
        desc = item['cve']['description']['description_data'][0]['value']
        try:
            cvss = item['impact']['baseMetricV3']['cvssV3']['baseScore']
        except Exception:
            cvss = 0.0
        c.execute("INSERT OR IGNORE INTO cves (id, description, cvss) VALUES (?, ?, ?)",
                  (cve_id, desc, cvss))
        count += 1

    conn.commit()
    conn.close()
    print(f"âœ… Veri aktarÄ±ldÄ±. Toplam iÅŸlem: {count} kayÄ±t")

def main():
    download_and_extract()
    import_to_sqlite()
    print("ðŸŽ‰ TamamlandÄ±! 'cve_data.db' veritabanÄ± oluÅŸturuldu ve CVE bilgileri eklendi.")

if __name__ == "__main__":
    main()
